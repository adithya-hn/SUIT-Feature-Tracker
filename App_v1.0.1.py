# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ar_41_light.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


# To be added

#- log save
#- Dark mode
#- Documentation

import os
os.environ["QT_AUTO_SCREEN_SCALE_FACTOR"] = "1"
os.environ["QT_ENABLE_HIGHDPI_SCALING"] = "1"
os.environ["QT_SCALE_FACTOR"] = "1"
os.environ["QT_AUTO_SCREEN_SCALE_FACTOR"] = "1"
os.environ["QT_ENABLE_HIGHDPI_SCALING"] = "1"


#import astropy
#import drms
from astropy.time import Time, TimeDelta
import astropy.units as u
from astropy.coordinates import SkyCoord
from sunpy.coordinates import frames
from sunpy.coordinates import RotatedSunFrame
from astropy.wcs import WCS
from sunpy.coordinates import Helioprojective
from datetime import datetime, timedelta
import numpy as np
import matplotlib.pyplot as plt
import sunpy.map
from sunpy.net import attrs as a  
from datetime import datetime, timedelta
from sunpy.net import Fido
import sys
import wget
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QPixmap
from PyQt5.QtCore import QUrl
from PyQt5.QtGui import QDesktopServices,QIcon
from PyQt5.QtWidgets import *
from PyQt5.QtCore import QSize
from matplotlib.patches import Rectangle
from PyQt5.QtCore import pyqtSignal

from PyQt5.QtWidgets import QDialog, QApplication, QPushButton, QVBoxLayout,QMessageBox
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.backends.backend_qt5agg import NavigationToolbar2QT as NavigationToolbar

import warnings
warnings.simplefilter('ignore')

class Window_(QDialog):
    coordinates_selected = pyqtSignal(object)
    def __init__(self, parent=None):
        

        super(Window_, self).__init__(parent)
        self.setWindowTitle('Display window')


        # a figure instance to plot on
        self.figure = plt.figure()

        # this is the Canvas Widget that displays the `figure`
        # it takes the `figure` instance as a parameter to __init__
        self.canvas = FigureCanvas(self.figure)

        # this is the Navigation widget
        # it takes the Canvas widget and a parent
        self.toolbar = NavigationToolbar(self.canvas, self)

        # Just some button connected to `plot` method
        self.button = QPushButton('Download and Plot')
        self.button.clicked.connect(self.plot)

        self.close_button = QPushButton(' Close')
        self.close_button.setFixedSize(QSize(80, 25))
        self.close_button.setStyleSheet("background-color : lightblue") 
        self.close_button.clicked.connect(self.close)
        #self.close_button.clicked.connect(Ui_MainWindow.Update_vals)

        self.pred_button = QPushButton(' Show Prediction ')
        self.pred_button.setFixedSize(QSize(125, 25))
        self.pred_button.setStyleSheet("background-color : lightblue") 
        self.pred_button.clicked.connect(self.draw_prd_map)
        

        self.input_label1 = QLabel("    AIA Channel")
        self.input_box1 = QComboBox(self)
        self.input_box1.addItems(["1600 A", "171 A", "304 A"])
        #self.input_box1.setFixedSize(QSize(150, 25)) 

        self.input_label2 = QLabel("   ROI Width:")
        self.input_box2 = QLineEdit(self)
        self.input_box2.setFixedHeight(25)
        self.input_box2.setFixedWidth(45)
        self.input_box2.setAlignment(QtCore.Qt.AlignCenter)
        self.input_box2.setText('704')
        

        self.input_label3 = QLabel("   ROI Height:")
        self.input_box3 = QLineEdit(self)
        self.input_box3.setFixedHeight(25)
        self.input_box3.setFixedWidth(45)
        self.input_box3.setAlignment(QtCore.Qt.AlignCenter)
        self.input_box3.setText('704')

        self.input_hr = QLineEdit(self)
        self.input_hr.setFixedHeight(25)
        self.input_hr.setFixedWidth(40)
        self.input_hr.setText('24')
        #self.input_hr.setStyleSheet("background-color : lightgray ") 
        self.input_hr.setAlignment(QtCore.Qt.AlignCenter)
        self.input_hr_txt = QLabel("hours ")
        self.s_space_lbl = QLabel('')
        self.space_lbl = QLabel("  ")
        self.Large_space_lbl = QLabel("       ")

        input_layout = QHBoxLayout()
        input_layout.addWidget(self.Large_space_lbl)
        input_layout.addWidget(self.space_lbl)
        input_layout.addWidget(self.input_label1)
        input_layout.addWidget(self.input_box1)
        input_layout.addWidget(self.input_label2)
        input_layout.addWidget(self.input_box2)
        input_layout.addWidget(self.input_label3)
        input_layout.addWidget(self.input_box3)
        input_layout.addWidget(self.space_lbl)
        input_layout.addWidget(self.pred_button)
        #input_layout.addWidget(self.s_space_lbl)
        input_layout.addWidget(self.input_hr)
        input_layout.addWidget(self.input_hr_txt)
        input_layout.addWidget(self.space_lbl)
        #input_layout.addWidget(self.close_button)
        input_layout.addWidget(self.Large_space_lbl)



        # set the layout
        layout = QVBoxLayout()
        layout.addWidget(self.toolbar)
        layout.addWidget(self.canvas)
        layout.addWidget(self.button)

        layout.addLayout(input_layout)
        self.setLayout(layout)
    

    

    def mouse_event(self,event,):
        if event.button == 3: #3 to make right click enabled
            
            global ptx
            global pty
            w=WCS(Image_map.fits_header) 
            ptx = event.xdata
            pty = event.ydata
            sky = w.pixel_to_world(event.xdata, event.ydata)
            self.coordinates_selected.emit(sky)  
            
            #print(sky[0],sky[1])
            #plt.close()
            #sys.exit(1)
            
            return (sky)
    
    

    def draw_roi(self,event):
        
        if event.button == 1:
            global sky   
            #rect.remove()
            #print('left click')
             
            w=WCS(Image_map.fits_header) 
            ptx = event.xdata
            pty = event.ydata
            #print(ptx,pty)
            sky = w.pixel_to_world(event.xdata, event.ydata)
            x1=int(self.input_box2.text())
            y1=int(self.input_box3.text())
            rect.set_xy((ptx-int(x1/8), pty-int(y1/8)))
            rect.set_width(x1/4) #4 time less as this is 1 k imge
            rect.set_height(y1/4)
            #rect = Rectangle((ptx-220, pty-220), x1, y1, edgecolor='r', facecolor='none')
            ax.add_patch(rect)
            
            point_plot.set_offsets([ptx,pty])
            self.figure.canvas.draw()
            self.coordinates_selected.emit(sky) 
            #self.draw_prd_map() 
            
            #Image_map.draw_quadrangle(coords, axes=ax, edgecolor="red")
            #self.figure.canvas.draw()

    def draw_prd_map(self):

            velc_pointing=sunpy.map.Map(f'{os.path.dirname(os.path.abspath(__file__))}/CCD_Reference.fits')
            velc_pointing.meta['DATE-OBS']=str(Image_map.date)
            img2=velc_pointing.data
            w2=WCS(velc_pointing.fits_header)
            ax.set_position([0.05, 0.1, 0.4, 0.8])
            ax2 = self.figure.add_axes([0.55, 0.1, 0.4, 0.8], projection=velc_pointing) 
            ax.set_title('Reference image')
            ax2.set_title('Predicted position')
            

            durations = int(self.input_hr.text()) * u.hour
            _hpc_frame = Helioprojective(observer='earth', obstime=str(velc_pointing.date))
            
            _ar_cord=SkyCoord(sky.Tx,sky.Ty,frame=_hpc_frame)
            diffrot_point = SkyCoord(RotatedSunFrame(base=_ar_cord, duration=durations))
            tr_diffrot_point = diffrot_point.transform_to(_hpc_frame)
            ptx2,pty2=w2.world_to_pixel(tr_diffrot_point)
            #print('-----,,>',ptx2,pty2)
            ax2.imshow(img2,origin='lower',vmin=0,vmax=230,cmap='nipy_spectral')
            velc_pointing.draw_limb(axes=ax2)
            velc_pointing.draw_grid(axes=ax2)
            ax2.plot_coord(sky, 'yo', fillstyle='none', label='Original')
            ax2.plot_coord(tr_diffrot_point, '+', fillstyle='none',label='Rotated')
            x1=int(self.input_box2.text())
            y1=int(self.input_box3.text())
            x1_=(x1*0.7/2.64)
            y1_=(y1*0.7/2.64)
            rect2 = Rectangle((ptx2-(x1_/2), pty2-(y1_/2)), x1_, y1_, edgecolor='b', facecolor='none')
            ax2.add_patch(rect2)
            pred_time=Time(velc_pointing.date)+TimeDelta(durations)
            ax2.text(20, 950, f"{str(pred_time)} ", color='white', fontsize=8,alpha=0.8)
            
            self.figure.canvas.draw()      
        
    def plot(self):
        ''' plot some random stuff '''
        # random data
        
        global ax
        global rect
        global point_plot
        global filename
        
        #fl_dest='/home/'
        #client = drms.Client()
        #series = a.jsoc.Series('aia.lev1_euv_12s_nrt')
        
        
        link_part='http://jsoc.stanford.edu/data/aia/synoptic/nrt/'
        dob_obj =INPUT_Data #datetime.strptime(INPUT_Data, '%Y-%m-%d_%H:%M:%S.%f')
        #print(dob_obj)
        t1=dob_obj
        t2=dob_obj+timedelta(seconds=90)
        yr=str(dob_obj.year)
        mt=str(dob_obj.month).zfill(2)
        day=str(dob_obj.day).zfill(2)
        hr=str(dob_obj.hour).zfill(2)
        mn=str(dob_obj.minute).zfill(2)
        sec=str(dob_obj.second)
        even_min = str(int(np.round((dob_obj.minute+(dob_obj.second/60)) / 3) * 3)).zfill(2) #AIA has requires minute in even
        #print(even_min)
        channel=str(self.input_box1.currentText())[:-2] 
        Map_col='sdoaia1600'
        if channel== '171':
            channel='0171'
            Map_col='sdoaia171'
        if channel == '304':
            channel='0304'
            Map_col='sdoaia304'
        link=link_part+yr+'/'+mt+'/'+day+'/'+'H'+hr+'00'+'/'#+'AIA20110713_0600_0094.fits'
        aia_fname=link+'AIA'+yr+mt+day+'_'+hr+even_min+'00'+'_'+channel+'.fits'
        #print(aia_fname)
        #username = os.getlogin()
        self.Current_dir=os.getcwd()
        #os.makedirs(self.Current_dir, exist_ok=True) # Ensure the directory exists
        #pathlib.Path((self.Current_dir+'/'+'Downloaded_data')).mkdir(parents=True, exist_ok=True) 
        Fname='AIA'+yr+mt+day+'_'+hr+even_min+'00'+'_'+channel+'.fits'
        existing_fl=self.Current_dir+'/'+Fname
        #print(existing_fl)
        Down_dir=self.Current_dir
        if os.path.exists(existing_fl):
            print('')
        else:
            try:
                print(aia_fname)
                filename = wget.download(aia_fname, out=Down_dir)
                #print(filename)
                print('')
                
            except:
                print('--could not download')

        global Image_map
        

        Image_map=sunpy.map.Map(existing_fl)
      
        self.figure.clear()

        # create an axis
        ax = self.figure.add_subplot(projection=Image_map)
        IMG=Image_map.data
        
        
        initial_point = SkyCoord(1000*u.arcsec, -1000*u.arcsec, frame=Image_map.coordinate_frame)
        #point_plot, = ax.plot_coord(initial_point, '+', color='red', markersize=10)
        point_plot = ax.scatter(initial_point.Tx.value, initial_point.Ty.value, color='red', s=40,marker='+',alpha=0.5)
        
        rect = Rectangle((0, 0), 0, 0, edgecolor='g', facecolor='none') 
        ax.add_patch(rect)
        cid = self.figure.canvas.mpl_connect('button_press_event', self.mouse_event )  
        ms_clk = self.figure.canvas.mpl_connect('button_press_event', self.draw_roi ) 
        
        
        ax.imshow(IMG,origin='lower',vmin=np.percentile(IMG,2),vmax=np.percentile(IMG,99.2),cmap=Map_col)
        ax.text (20, 950, f" {str(Image_map.date)} ", color='white', fontsize=8,alpha=0.8)
        #Image_map.draw_limb(axes=ax)
        #Image_map.draw_grid(axes=ax)

        #cid2 = self.figure.canvas.mpl_connect('button_press_event', self.draw_roi )
        # refresh canvas

        self.canvas.draw()

    def closeEvent(self, event):
        # Call your custom function to delete the file
        self.delete_file()
        event.accept()  # Accept the close event and allow the window to close

    def delete_file(self):
        #global filename
        # Check if the file exists before trying to delete it
        if os.path.exists(filename):
            os.remove(filename)

        else:
            print(f"")



class Ui_MainWindow(object):
    global sky
    def Open_pop(self):
        
        self.Get_dob()
        self.SW =Window_()
        self.SW.coordinates_selected.connect(self.update_coordinates)
        self.SW.show()

    def update_coordinates(self, sky):
        # Update the input fields with the coordinates
        #print('----')
        #print(sky)
        self.Theta1_input_x.setText(str(round(sky.Tx.arcsec, 1)))
        self.Theta1_input_y.setText(str(round(sky.Ty.arcsec, 1)))
            
            
    def Get_dob(self):
        global INPUT_Data
        INPUT_Data=datetime.strptime(self.Date_input_1.text(), '%d/%m/%Y %H:%M:%S')

        return INPUT_Data 
    
    def Calculate_coord_bulk(self):
        global tx_array
        global ty_array
        global rXc_ar
        global rYc_ar
        global rX1_ar
        global rX2_ar
        global rY1_ar
        global rY2_ar
        global date1_ar
        global date2_ar
        global suit_x_ar
        global suit_y_ar
        global Rot_ang_ar
        global roiX_ar
        global roiY_ar
        global Dl_ar
        global tx_in
        global ty_in

        if self.Theta1_input_x.text() == '':
            print('Insert coordinates')

        date2=datetime.strptime(self.BulkTab_strDate_input.text(), '%d/%m/%Y %H:%M:%S') 
        date1=datetime.strptime(self.Date_input_1.text(), '%d/%m/%Y %H:%M:%S') 
        date3=datetime.strptime(self.BulkTab_endDate_input.text(),'%d/%m/%Y %H:%M:%S')
        interval=int(self.BulkTab_cadence_input.text())
        #print(interval)
        #print(date2,date1)
        tx=float(self.Theta1_input_x.text())
        ty=float(self.Theta1_input_y.text())
        #print(tx,ty)
        suit_x=int(self.X1_input.text())
        suit_y=int(self.Y1_input.text())

        duration=(date2-date1).total_seconds()/3600
        hpc_frame = Helioprojective(observer='earth', obstime=date1)
        #durations = np.concatenate([range(-2, 0), range(1, 6)]) * u.day
        #print('::',duration)
        ar_cord=SkyCoord(tx*u.arcsec,ty *u.arcsec,frame=hpc_frame)
        diffrot_point = SkyCoord(RotatedSunFrame(base=ar_cord, duration=duration*u.hour))
        transformed_diffrot_point = diffrot_point.transform_to(hpc_frame)
        #print(transformed_diffrot_point.Tx.arcsec)

        tx=round(transformed_diffrot_point.Tx.arcsec,1)
        ty=round(transformed_diffrot_point.Ty.arcsec,1)
        hpc_frame1 = Helioprojective(observer='earth', obstime=date2)
        ar_cord=SkyCoord(tx*u.arcsec,ty *u.arcsec,frame=hpc_frame1)

        duration2=(date3-date2).total_seconds()/3600
        #print('hours',duration2)
        val=int(duration2/interval)
        #print('TxTy',tx,ty,val)
        tx_array=[]
        ty_array=[]
        tx_in=[]
        ty_in=[]
        rXc_ar=[]
        rYc_ar=[]
        rX1_ar=[]
        rY1_ar=[]
        rX2_ar=[]
        rY2_ar=[]
        date1_ar=[]
        date2_ar=[]
        suit_x_ar=[]
        suit_y_ar=[]
        Rot_ang_ar=[]
        roiX_ar=[]
        roiY_ar=[]
        Dl_ar=[]
        self.BulkTab_Theta_output_x.clear()
        self.BulkTab_Theta_output_y.clear()
        self.BulkTab_Xc_output.clear()
        self.BulkTab_Yc_output.clear()
        self.BulkTab_X1_output.clear()
        self.BulkTab_Y1_output.clear()
        self.BulkTab_X2_output.clear()
        self.BulkTab_Y2_output.clear()

        for j in range (val+1):
            date1_ar.append(date1)
            diffrot_point = SkyCoord(RotatedSunFrame(base=ar_cord, duration=(interval*j)*u.hour))
            modDate=date2+timedelta(hours=(interval*j))
            date2_ar.append(modDate)
            transformed_diffrot_point = diffrot_point.transform_to(hpc_frame1)
            #print(transformed_diffrot_point.Tx.arcsec)
            Tx_b=round(transformed_diffrot_point.Tx.arcsec,1)
            Ty_b=round(transformed_diffrot_point.Ty.arcsec,1)
            #print(Tx_,Ty_)
            tx_array.append(Tx_b)
            ty_array.append(Ty_b)
            tx_in.append(self.Theta1_input_x.text())
            ty_in.append(self.Theta1_input_y.text())
            suit_x_ar.append(suit_x)
            suit_y_ar.append(suit_y)
            Rot_ang_ar.append(self.Rotation_angle_input.text())
            roiX_ar.append(self.Col_input.text())
            roiY_ar.append(self.Row_input.text())
            
            #print(date2,(val*j)*u.hour,Tx_b,Ty_)

            P_angle=(int(self.Rotation_angle_input.text()))*np.pi/180
            #print(P_angle)
            cor_px=((Tx_b)*np.cos(P_angle)+Ty_b*np.sin(P_angle))/0.7
            cor_py=((Tx_b)*np.sin(P_angle)+Ty_b*np.cos(P_angle))/0.7
            Data_level=self.comboBox.currentText()
            #print('level:',Data_level)
            Dl=1


            if Data_level=='Level-0.5':
                P_angle=(float(self.Rotation_angle_input.text())+90)*np.pi/180
                Dl=0
                cor_px=((-Tx_b)*np.cos(P_angle)+Ty_b*np.sin(P_angle))/0.7
                cor_py=((Tx_b)*np.sin(P_angle)+Ty_b*np.cos(P_angle))/0.7


            Dl_ar.append(Dl)
            Xc=round((suit_x+cor_px)/4)*4
            Yc=round((suit_y+cor_py)/4)*4

            rX1=int(Xc-float(self.Row_input.text())/2)
            rY1=int(Yc-float(self.Col_input.text())/2)
            rX2=int(Xc+(float(self.Row_input.text())/2)-1)
            rY2=int(Yc+(float(self.Col_input.text())/2)-1)

            #conditions
            if Xc>0:
                self.BulkTab_Xc_output.append(str(Xc))
                rXc_ar.append(Xc)
                if Yc>0:
                    self.BulkTab_Yc_output.append(str(Yc))
                    rYc_ar.append(Yc)
                    if ((rX2-rX1)+1) % 16 ==0:
                        
                        if rX1>0:
                            self.BulkTab_X1_output.append(str(rX1))
                            rX1_ar.append(rX1)
                            if rY1>0:
                                self.BulkTab_Y1_output.append(str(rY1))
                                rY1_ar.append(rY1)
                                if rX2<4096:
                                    self.BulkTab_X2_output.append(str(rX2))
                                    rX2_ar.append(rX2)
                                    if rY2<4136:
                                        self.BulkTab_Y2_output.append(str(rY2))
                                        rY2_ar.append(rY2)
                                    else:
                                        self.BulkTab_Y2_output.append('Y2>4196')
                                        rY2_ar.append('Y2>4196')
                                else:
                                    self.BulkTab_X2_output.append('X2>4096')
                                    rX2_ar.append('X2>4196')
                            else:
                                self.BulkTab_Y1_output.append('Y1<0')
                                rY1_ar.append('Y1<0')
                        else:
                            self.BulkTab_X1_output.append('X1<0')
                            rX1_ar.append('X1<0')
                            
                    else:
                        #print('val',((rX2-rX1)+1))
                        self.BulkTab_X1_output.append('Div Eror')
                        self.BulkTab_Y1_output.append('Div Eror')
                        self.BulkTab_Y2_output.append('Div Eror')
                        self.BulkTab_X2_output.append('Div Eror')
                        rX1_ar.append('Div Eror')
                        rY1_ar.append('Div Eror')
                        rX2_ar.append('Div Eror')
                        rY2_ar.append('Div Eror')
                else:
                    self.BulkTab_Yc_output.append('Yc<0')
                    rYc_ar.append('Yc<0')
            else:
                self.BulkTab_Xc_output.append('Xc<0')
                rXc_ar.append('Xc<0')
            
        



            self.BulkTab_Theta_output_y.append(str(Ty_b))
            self.BulkTab_Theta_output_x.append(str(Tx_b))
            self.BulkTab_Theta_output_x.setAlignment(QtCore.Qt.AlignCenter)
            self.BulkTab_Theta_output_y.setAlignment(QtCore.Qt.AlignCenter)

        
        

            


    def Calculate_coord(self):
        global Tx_
        global Ty_
        global RXc
        global RYc
        global RX1
        global RX2
        global RY1
        global RY2
        
        
        
        #self.Update_vals()
        if self.Theta1_input_x.text() == '':
            print('Insert coordinates')
        date2=datetime.strptime(self.SigleTab_Date_input.text(), '%d/%m/%Y %H:%M:%S') 
        date1=datetime.strptime(self.Date_input_1.text(), '%d/%m/%Y %H:%M:%S') 
        #print(date2,date1)
        tx=float(self.Theta1_input_x.text())
        ty=float(self.Theta1_input_y.text())
        #print(tx,ty)
        suit_x=int(self.X1_input.text())
        suit_y=int(self.Y1_input.text())

        #print(tx,ty)
        duration=(date2-date1).total_seconds()/3600
        hpc_frame = Helioprojective(observer='earth', obstime=date1)
        #durations = np.concatenate([range(-2, 0), range(1, 6)]) * u.day
        #print('::',duration)
        ar_cord=SkyCoord(tx*u.arcsec,ty *u.arcsec,frame=hpc_frame)
        diffrot_point = SkyCoord(RotatedSunFrame(base=ar_cord, duration=duration*u.hour))
        transformed_diffrot_point = diffrot_point.transform_to(hpc_frame)
        #print(transformed_diffrot_point.Tx.arcsec)
        Tx_=round(transformed_diffrot_point.Tx.arcsec,1)
        Ty_=round(transformed_diffrot_point.Ty.arcsec,1)
        #print(Tx_,Ty_)

        P_angle=(float(self.Rotation_angle_input.text()))*np.pi/180
        #print(P_angle)
        cor_px=((Tx_)*np.cos(P_angle)+Ty_*np.sin(P_angle))/0.7
        cor_py=((Tx_)*np.sin(P_angle)+Ty_*np.cos(P_angle))/0.7
        Data_level=self.comboBox.currentText()
        #print('level:',Data_level)
        if Data_level=='Level-0.5':
            P_angle=(float(self.Rotation_angle_input.text())+90)*np.pi/180
            #print('Its level0',Data_level)
            cor_px=((-Tx_)*np.cos(P_angle)+Ty_*np.sin(P_angle))/0.7
            cor_py=((Tx_)*np.sin(P_angle)+Ty_*np.cos(P_angle))/0.7
            


        
       
        RXc=round((suit_x+cor_px)/4)*4
        RYc=round((suit_y+cor_py)/4)*4
        #print('roi',int(self.Row_input.text()))
        RX1=int(RXc-float(self.Row_input.text())/2)
        RY1=int(RYc-float(self.Col_input.text())/2)
        RX2=int(RXc+(float(self.Row_input.text())/2)-1)
        RY2=int(RYc+(float(self.Col_input.text())/2)-1)

        self.SingleTab_Theta_output_y.setText(str(Ty_)) 
        self.SingleTab_Theta_output_x.setText(str(Tx_))

        #print(cor_px,cor_py)
        #print(suit_x,suit_y)

        #conditions
        if RXc>0:
            self.SingleTab_Xc_output.setText(str(RXc))
            if RYc>0:
                self.SingleTab_Yc_output.setText(str(RYc))
                
                if ((RX2-RX1)+1) % 16 ==0:
                    
                    if RX1>0:
                        self.SingleTab_X1_output.setText(str(RX1))
                        if RY1>0:
                            self.SingleTab_Y1_output.setText(str(RY1))
                            if RX2<4096:
                                self.SingleTab_X2_output.setText(str(RX2))
                                if RY2<4136:
                                    self.SingleTab_Y2_output.setText(str(RY2))
                                else:
                                    self.SingleTab_Y2_output.setText('Y2>4196')
                            else:
                                self.SingleTab_X2_output.setText('X2>4096')
                        else:
                            self.SingleTab_Y1_output.setText('Y1<0')
                    else:
                        self.SingleTab_X1_output.setText('X1<0')
                        
                else:
                    #print('val',((rX2-RX1)+1))
                    self.SingleTab_X1_output.setText('Div Eror')
                    self.SingleTab_Y1_output.setText('Div Eror')
                    self.SingleTab_Y2_output.setText('Div Eror')
                    self.SingleTab_X2_output.setText('Div Eror')    


        

        self.SingleTab_Theta_output_x.setAlignment(QtCore.Qt.AlignCenter)
        self.SingleTab_Theta_output_y.setAlignment(QtCore.Qt.AlignCenter)
        self.SingleTab_X1_output.setAlignment(QtCore.Qt.AlignCenter)
        self.SingleTab_Y1_output.setAlignment(QtCore.Qt.AlignCenter)
        self.SingleTab_Xc_output.setAlignment(QtCore.Qt.AlignCenter)
        self.SingleTab_Yc_output.setAlignment(QtCore.Qt.AlignCenter)
        self.SingleTab_X2_output.setAlignment(QtCore.Qt.AlignCenter)
        self.SingleTab_Y2_output.setAlignment(QtCore.Qt.AlignCenter)

         
    def Update_vals(setupUi,self):
        #print('------>',sky.Tx.arcsec)
        setupUi.Update_val(self, MainWindow)


        
        
    def open_Helio_viewer(self):
        # Define the URL of the website
        website_url = 'https://helioviewer.org'
        QDesktopServices.openUrl(QUrl(website_url))

    def open_documentation(self):
        # Define the path to the PDF documentation file
        doc_path = "/usr/share/SuitApp/docs/SUIT_Feature_Tracking_software_manual.pdf"

        # Check if the file exists
        if os.path.exists(doc_path):
            # Open the PDF file using the system's default viewer (Linux)
            os.system(f"xdg-open {doc_path}")
        else:
            # Show a warning if the file is not found
            QMessageBox.warning(self, "Error", "Documentation file not found!")

    def open_About(self):
        # Define the URL of the website
        website_url = 'https://github.com/adithya-hn/SUIT-Feature-Tracker'
        QDesktopServices.openUrl(QUrl(website_url))
    
    def open_Updates(self):
        # Define the URL of the website
        website_url = 'https://github.com/adithya-hn/SUIT-Feature-Tracker/tree/main'
        QDesktopServices.openUrl(QUrl(website_url))

    def open_solar_monitor(self):
        website_url='https://www.solarmonitor.org'
        QDesktopServices.openUrl(QUrl(website_url))

    def save_log_sm(self):
        
        tx=float(self.Theta1_input_x.text())
        ty=float(self.Theta1_input_y.text())
        date2=datetime.strptime(self.SigleTab_Date_input.text(), '%d/%m/%Y %H:%M:%S') 
        date1=datetime.strptime(self.Date_input_1.text(), '%d/%m/%Y %H:%M:%S') 
        suit_x=int(self.X1_input.text())
        suit_y=int(self.Y1_input.text())
        Roi_x=int(self.Row_input.text())
        Roi_y=int(self.Col_input.text())
        Rot_ang=int(self.Rotation_angle_input.text())
        Data_level=self.comboBox.currentText()
        if Data_level=='Level-0.5':
            Dl=0
        else:
            Dl=1
        cwd = os.getcwd()
        fnm='Single_mode_log.csv'
        f_path=cwd+'/'+fnm
        print(' ')

        #print(' --------------------- ')
        print(f"{date1},{tx},{ty},{suit_x},{suit_y},{Rot_ang},{Roi_x},{Roi_y},{date2},{Tx_},{Ty_},{RX1},{RY1},{RXc},{RYc},{RX2},{RY2},{Dl}")

        if os.path.isfile(f_path):
            fa1 = open(f_path, 'a') #area, bg and xbp
            np.savetxt(fa1,np.c_[date1,tx,ty,suit_x,suit_y,Rot_ang,Roi_x,Roi_y,date2,Tx_,Ty_,RX1,RY1,RXc,RYc,RX2,RY2,Dl], delimiter=',',fmt='%s')           
            fa1.close()
        else:
            fa1 = open(f_path, 'a') #area, bg and xbp
            np.savetxt(fa1,np.c_[date1,tx,ty,suit_x,suit_y,Rot_ang,Roi_x,Roi_y,date2,Tx_,Ty_,RX1,RY1,RXc,RYc,RX2,RY2,Dl], delimiter=',',fmt='%s',header='Entry_date,Input Tx,Input_Ty,CCD_x,CCD_y,Rotation_angle,ROI_X_width,ROI_Y_width,Observation_date,Tx,Ty,X1,Y1,Xc,Yc,X2,Y2,Data_level')           
            fa1.close()

    def save_log_bm(self):
        
        tx=float(self.Theta1_input_x.text())
        ty=float(self.Theta1_input_y.text())
        date2=datetime.strptime(self.BulkTab_strDate_input.text(), '%d/%m/%Y %H:%M:%S') 
        date1=datetime.strptime(self.Date_input_1.text(), '%d/%m/%Y %H:%M:%S') 
        suit_x=int(self.X1_input.text())
        suit_y=int(self.Y1_input.text())
        Roi_x=int(self.Row_input.text())
        Roi_y=int(self.Col_input.text())
        Rot_ang=int(self.Rotation_angle_input.text())
        Data_level=self.comboBox.currentText()
        # Loop through the arrays and print each set of values as a CSV row without double quotes
        #print(' --------------------- ')
        print('')
        for i in range(len(date1_ar)):
            print(f"{date1_ar[i]},{tx_in[i]},{ty_in[i]},{suit_x_ar[i]},{suit_y_ar[i]},{Rot_ang_ar[i]},{roiX_ar[i]},{roiY_ar[i]},{date2_ar[i]},{tx_array[i]},{ty_array[i]},{rX1_ar[i]},{rY1_ar[i]},{rXc_ar[i]},{rYc_ar[i]},{rX2_ar[i]},{rY2_ar[i]},{Dl_ar[i]}")


        if Data_level=='Level-0.5':
            Dl=0
        else:
            Dl=1
        cwd = os.getcwd()
        fnM='Batch_mode_log.csv'
        f_path=cwd+'/'+fnM
        if os.path.isfile(f_path):
            fa1 = open(f_path, 'a') #area, bg and xbp
            np.savetxt(fa1,np.c_[date1_ar,tx_in,ty_in,suit_x_ar,suit_y_ar,Rot_ang_ar,roiX_ar,roiY_ar,date2_ar,tx_array,ty_array,rX1_ar,rY1_ar,rXc_ar,rYc_ar,rX2_ar,rY2_ar,Dl_ar], delimiter=',',fmt='%s')           
            fa1.close()
        else:
            fa1 = open(f_path, 'a') #area, bg and xbp
            np.savetxt(fa1,np.c_[date1_ar,tx_array,ty_array,suit_x_ar,suit_y_ar,Rot_ang_ar,roiX_ar,roiY_ar,date2_ar,tx_array,ty_array,rX1_ar,rY1_ar,rXc_ar,rYc_ar,rX2_ar,rY2_ar,Dl_ar], delimiter=',',fmt='%s',header='Entry_date,Input Tx,Input_Ty,CCD_x,CCD_y,Rotation_angle,ROI_X_width,ROI_Y_width,Observation_date,Tx,Ty,X1,Y1,Xc,Yc,X2,Y2,Data_level')           
            fa1.close()


    
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(849, 649)
        MainWindow.move(100,150)


        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(253, 253, 253))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(125, 125, 125))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(167, 167, 167))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(253, 253, 253))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(253, 253, 253))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(125, 125, 125))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(167, 167, 167))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(253, 253, 253))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(125, 125, 125))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(253, 253, 253))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(125, 125, 125))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(167, 167, 167))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(125, 125, 125))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(125, 125, 125))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        
        MainWindow.setPalette(palette)
        MainWindow.setAutoFillBackground(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(253, 253, 253))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(125, 125, 125))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(167, 167, 167))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(253, 253, 253))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(253, 253, 253))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(125, 125, 125))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(167, 167, 167))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(253, 253, 253))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(125, 125, 125))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(253, 253, 253))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(125, 125, 125))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(167, 167, 167))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(125, 125, 125))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(125, 125, 125))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        
        

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.image = QPixmap('logo.png')
        self.image=self.image.scaled(100, 100, QtCore.Qt.KeepAspectRatio)
        self.logo_label=QtWidgets.QLabel(self.centralwidget)
        self.logo_label.setPixmap(self.image)#.scaled(300, 200, QtCore.KeepAspectRatio,QtCore.SmoothTransformation))
        self.logo_label.setGeometry(QtCore.QRect(690, 0, 900, 60))

        

        self.Current_Date_label = QtWidgets.QLabel(self.centralwidget)
        self.Current_Date_label.setGeometry(QtCore.QRect(70, 76, 251, 17))
        self.Current_Date_label.setObjectName("Current_Date_label")
        self.Current_pos_label = QtWidgets.QLabel(self.centralwidget)
        self.Current_pos_label.setGeometry(QtCore.QRect(540, 75, 225, 17))
        self.Current_pos_label.setObjectName("Current_pos_label")

        self.Current_Date_position_group = QtWidgets.QGroupBox(self.centralwidget)
        self.Current_Date_position_group.setEnabled(True)
        self.Current_Date_position_group.setGeometry(QtCore.QRect(54, 37, 731, 111))
        self.Current_Date_position_group.setObjectName("Current_Date_position_group")

        self.Date_input_1 = QtWidgets.QDateTimeEdit(self.Current_Date_position_group)
        self.Date_input_1.setDisplayFormat('dd/MM/yyyy HH:mm:s')
        current_datetime = QtCore.QDateTime.currentDateTime()
        min_datetime = current_datetime.addSecs(int(-6 * 60 * 60))  # Subtract 2 hours (in seconds)
        #self.datetime_edit.setMinimumDateTime(min_datetime)
        self.Date_input_1.setDateTime(min_datetime)
        self.Date_input_1.setGeometry(QtCore.QRect(20, 61, 191, 31))
        self.Date_input_1.setObjectName("Date_input_1")
        self.Date_input_1.setAlignment(QtCore.Qt.AlignCenter)

        self.ThetaX_label = QtWidgets.QLabel(self.centralwidget)
        self.ThetaX_label.setGeometry(QtCore.QRect(466, 105, 70, 17))
        self.ThetaX_label.setObjectName("ThetaX_label")

        self.ThetaY_label = QtWidgets.QLabel(self.centralwidget)
        self.ThetaY_label.setGeometry(QtCore.QRect(608, 105, 61, 17))
        self.ThetaY_label.setObjectName("ThetaY_label")

        self.Theta1_input_x = QtWidgets.QLineEdit(self.centralwidget)
        self.Theta1_input_x.setGeometry(QtCore.QRect(528, 98, 70, 30))
        self.Theta1_input_x.setObjectName("Theta1_input_x")
        self.Theta1_input_x.setAlignment(QtCore.Qt.AlignCenter)

        self.Theta1_input_y = QtWidgets.QLineEdit(self.centralwidget)
        self.Theta1_input_y.setGeometry(QtCore.QRect(670, 97, 80, 30))
        self.Theta1_input_y.setObjectName("Theta1_input_y")
        self.Theta1_input_y.setAlignment(QtCore.Qt.AlignCenter)

        self.version_Label = QtWidgets.QLabel(self.centralwidget)
        self.version_Label.setGeometry(QtCore.QRect(730, 587, 91, 21))
        self.version_Label.setObjectName("version_Label")

        self.pushButton = QtWidgets.QPushButton(self.Current_Date_position_group)
        self.pushButton.setGeometry(QtCore.QRect(240, 63, 140, 25))
        self.pushButton.setObjectName("pushButton")
        self.icon = QIcon(f'{os.path.dirname(os.path.abspath(__file__))}/HV_icon.svg')
        self.pushButton.setIcon(self.icon)
        self.pushButton.clicked.connect(self.Open_pop)

        self.Bottom_line = QtWidgets.QFrame(self.centralwidget)
        self.Bottom_line.setGeometry(QtCore.QRect(13, 579, 821, 20))
        self.Bottom_line.setFrameShape(QtWidgets.QFrame.HLine)
        self.Bottom_line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.Bottom_line.setObjectName("Bottom_line")

        #Section 2: SUIT Parameters
        self.Suit_group = QtWidgets.QGroupBox(self.centralwidget)
        self.Suit_group.setGeometry(QtCore.QRect(55, 160, 731, 101))
        self.Suit_group.setObjectName("Suit_group")
        
        self.Rotation_angle_input = QtWidgets.QLineEdit(self.Suit_group)
        self.Rotation_angle_input.setGeometry(QtCore.QRect(50, 56, 80, 30))
        self.Rotation_angle_input.setObjectName("Rotation_angle_input")
        self.Rotation_angle_input.setText('0')
        self.Rotation_angle_input.setAlignment(QtCore.Qt.AlignCenter)

        self.Sat_Rot_Label = QtWidgets.QLabel(self.Suit_group)
        self.Sat_Rot_Label.setGeometry(QtCore.QRect(19, 30, 191, 17))
        self.Sat_Rot_Label.setObjectName("Sat_Rot_Label")

        self.X1_input = QtWidgets.QLineEdit(self.Suit_group)
        self.X1_input.setGeometry(QtCore.QRect(430, 56, 70, 30))
        self.X1_input.setText('2048')
        self.X1_input.setObjectName("X1_input")
        self.X1_input.setAlignment(QtCore.Qt.AlignCenter)

        self.Y1_input = QtWidgets.QLineEdit(self.Suit_group)
        self.Y1_input.setGeometry(QtCore.QRect(530, 56, 71, 30))
        self.Y1_input.setText('2048')
        self.Y1_input.setObjectName("Y1_input")
        self.Y1_input.setAlignment(QtCore.Qt.AlignCenter)

        self.Suit_label_1 = QtWidgets.QLabel(self.Suit_group)
        self.Suit_label_1.setGeometry(QtCore.QRect(454, 31, 140, 17))
        self.Suit_label_1.setObjectName("Suit_label_1")
        self.X1_label = QtWidgets.QLabel(self.Suit_group)
        self.X1_label.setGeometry(QtCore.QRect(410, 62, 21, 17))
        self.X1_label.setObjectName("X1_label")
        self.Y1_label = QtWidgets.QLabel(self.Suit_group)
        self.Y1_label.setGeometry(QtCore.QRect(510, 63, 21, 17))
        self.Y1_label.setObjectName("Y1_label")

        
        self.Row_input = QtWidgets.QLineEdit(self.Suit_group)
        self.Row_input.setGeometry(QtCore.QRect(230, 56, 50, 30))
        self.Row_input.setText('704')
        self.Row_input.setObjectName("Row_input")
        self.Row_input.setAlignment(QtCore.Qt.AlignCenter)

        self.Col_input = QtWidgets.QLineEdit(self.Suit_group)
        self.Col_input.setGeometry(QtCore.QRect(320, 56, 50, 30))
        self.Col_input.setText('704')
        self.Col_input.setObjectName("Col_input")
        self.Col_input.setAlignment(QtCore.Qt.AlignCenter)
        
        
        self.ROI_label = QtWidgets.QLabel(self.Suit_group)
        self.ROI_label.setGeometry(QtCore.QRect(273, 30, 60, 17))
        self.ROI_label.setObjectName("ROI_label")
        self.Row_label = QtWidgets.QLabel(self.Suit_group)
        self.Row_label.setGeometry(QtCore.QRect(190, 60, 40, 20))
        self.Row_label.setObjectName("Row_label")
        self.Row_label_2 = QtWidgets.QLabel(self.Suit_group)
        self.Row_label_2.setGeometry(QtCore.QRect(288, 60, 41, 20))
        self.Row_label_2.setObjectName("Row_label_2")
        self.Suit_label_2 = QtWidgets.QLabel(self.Suit_group)
        self.Suit_label_2.setGeometry(QtCore.QRect(636, 31, 71, 17))
        self.Suit_label_2.setObjectName("Suit_label_2")

        self.comboBox = QtWidgets.QComboBox(self.Suit_group)
        self.comboBox.setGeometry(QtCore.QRect(627, 57, 91, 31))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("Lv0")
        self.comboBox.addItem("Lv1")
        #print(self.comboBox.currentText())

        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(56, 270, 731, 301))
        self.tabWidget.setObjectName("tabWidget")

        self.Single_tab = QtWidgets.QWidget()
        self.Single_tab.setObjectName("Single_tab")
        self.SingleTab_Prd_date_label = QtWidgets.QLabel(self.Single_tab)
        self.SingleTab_Prd_date_label.setGeometry(QtCore.QRect(10, 10, 271, 17))
        self.SingleTab_Prd_date_label.setObjectName("SingleTab_Prd_date_label")

        self.SigleTab_Date_input = QtWidgets.QDateTimeEdit(self.Single_tab)
        self.SigleTab_Date_input.setDisplayFormat('dd/MM/yyyy HH:mm:s')
        self.SigleTab_Date_input.setDateTime(QtCore.QDateTime.currentDateTime())
        self.SigleTab_Date_input.setGeometry(QtCore.QRect(23, 30, 191, 31))
        self.SigleTab_Date_input.setObjectName("SigleTab_Date_input")
        self.SigleTab_Date_input.setAlignment(QtCore.Qt.AlignCenter) 

        self.SingleTab_Predict_button = QtWidgets.QPushButton(self.Single_tab)
        self.SingleTab_Predict_button.setGeometry(QtCore.QRect(360, 30, 181, 25))
        self.SingleTab_Predict_button.setObjectName("SingleTab_Predict_button") 
        self.SingleTab_Predict_button.clicked.connect(self.Calculate_coord)

        self.SingleTab_Prediction_group = QtWidgets.QGroupBox(self.Single_tab)
        self.SingleTab_Prediction_group.setGeometry(QtCore.QRect(6, 70, 711, 191))
        self.SingleTab_Prediction_group.setObjectName("SingleTab_Prediction_group")

        self.SingleTab_AR_Group = QtWidgets.QGroupBox(self.SingleTab_Prediction_group)
        self.SingleTab_AR_Group.setGeometry(QtCore.QRect(20, 50, 211, 101))
        self.SingleTab_AR_Group.setObjectName("SingleTab_AR_Group")

        self.SingleTab_ThetaX2_label = QtWidgets.QLabel(self.SingleTab_AR_Group)
        self.SingleTab_ThetaX2_label.setGeometry(QtCore.QRect(10, 35, 61, 17))
        self.SingleTab_ThetaX2_label.setObjectName("SingleTab_ThetaX2_label")
        self.SingleTab_ThetaY2_label = QtWidgets.QLabel(self.SingleTab_AR_Group)
        self.SingleTab_ThetaY2_label.setGeometry(QtCore.QRect(10, 70, 61, 17))
        self.SingleTab_ThetaY2_label.setObjectName("SingleTab_ThetaY2_label")
        self.SingleTab_Theta_output_x = QtWidgets.QTextBrowser(self.SingleTab_AR_Group)
        self.SingleTab_Theta_output_x.setGeometry(QtCore.QRect(100, 29, 91, 31))
        self.SingleTab_Theta_output_x.setObjectName("SingleTab_Theta_output_x")
        self.SingleTab_Theta_output_y = QtWidgets.QTextBrowser(self.SingleTab_AR_Group)
        self.SingleTab_Theta_output_y.setGeometry(QtCore.QRect(100, 63, 91, 31))
        self.SingleTab_Theta_output_y.setObjectName("SingleTab_Theta_output_y")
        self.SingleTab_Yc_output = QtWidgets.QTextBrowser(self.SingleTab_Prediction_group)
        self.SingleTab_Yc_output.setGeometry(QtCore.QRect(573, 101, 91, 31))
        self.SingleTab_Yc_output.setObjectName("SingleTab_Y2_output")
        self.SingleTab_Xc_output = QtWidgets.QTextBrowser(self.SingleTab_Prediction_group)
        self.SingleTab_Xc_output.setGeometry(QtCore.QRect(400, 101, 91, 31))

        #self.SingleTab_X2_output.setPalette(palette)
        self.SingleTab_Xc_output.setObjectName("SingleTab_X2_output")
        self.SingleTab_Xc_label = QtWidgets.QLabel(self.SingleTab_Prediction_group)
        self.SingleTab_Xc_label.setGeometry(QtCore.QRect(368, 106, 30, 16))
        self.SingleTab_Xc_label.setObjectName("SingleTab_Xc_label")
        self.SingleTab_Yc_label = QtWidgets.QLabel(self.SingleTab_Prediction_group)
        self.SingleTab_Yc_label.setGeometry(QtCore.QRect(545, 106, 21, 17))
        self.SingleTab_Yc_label.setObjectName("SingleTab_Yc_label")
        self.SingleTab_Suit_label_2 = QtWidgets.QLabel(self.SingleTab_Prediction_group)
        self.SingleTab_Suit_label_2.setGeometry(QtCore.QRect(450, 30, 171, 20))
        self.SingleTab_Suit_label_2.setObjectName("SingleTab_Suit_label_2")
        self.SingleTab_CCD_group = QtWidgets.QGroupBox(self.SingleTab_Prediction_group)
        self.SingleTab_CCD_group.setGeometry(QtCore.QRect(330, 50, 371, 131))
        self.SingleTab_CCD_group.setTitle("")
        self.SingleTab_CCD_group.setObjectName("SingleTab_CCD_group")
        self.SingleTab_X1_output = QtWidgets.QTextBrowser(self.SingleTab_CCD_group)
        self.SingleTab_X1_output.setGeometry(QtCore.QRect(70, 11, 91, 31))
        
        #self.SingleTab_X2_output_2.setPalette(palette)
        self.SingleTab_X1_output.setObjectName("SingleTab_X2_output_2")
        self.SingleTab_X2_output = QtWidgets.QTextBrowser(self.SingleTab_CCD_group)
        self.SingleTab_X2_output.setGeometry(QtCore.QRect(70, 91, 91, 31))
        self.SingleTab_X2_output.setPalette(palette)
        self.SingleTab_X2_output.setObjectName("SingleTab_X2_output_3")
        self.SingleTab_X2_label = QtWidgets.QLabel(self.SingleTab_CCD_group)
        self.SingleTab_X2_label.setGeometry(QtCore.QRect(37, 100, 30, 10))
        self.SingleTab_X2_label.setObjectName("SingleTab_X2_label")
        self.SingleTab_X1_label = QtWidgets.QLabel(self.SingleTab_CCD_group)
        self.SingleTab_X1_label.setGeometry(QtCore.QRect(40, 20, 30, 16))
        self.SingleTab_X1_label.setObjectName("SingleTab_X1_label")
        self.SingleTab_Y1_output = QtWidgets.QTextBrowser(self.SingleTab_CCD_group)
        self.SingleTab_Y1_output.setGeometry(QtCore.QRect(243, 11, 91, 31))
        self.SingleTab_Y1_output.setObjectName("SingleTab_Y2_output_2")
        self.SingleTab_Y2_output = QtWidgets.QTextBrowser(self.SingleTab_CCD_group)
        self.SingleTab_Y2_output.setGeometry(QtCore.QRect(243, 91, 91, 31))
        self.SingleTab_Y2_output.setObjectName("SingleTab_Y2_output_3")
        self.SingleTab_Y2_label = QtWidgets.QLabel(self.SingleTab_CCD_group)
        self.SingleTab_Y2_label.setGeometry(QtCore.QRect(213, 96, 30, 17))
        self.SingleTab_Y2_label.setObjectName("SingleTab_Y2_label")
        self.SingleTab_Y1_label = QtWidgets.QLabel(self.SingleTab_CCD_group)
        self.SingleTab_Y1_label.setGeometry(QtCore.QRect(213, 17, 30, 17))
        self.SingleTab_Y1_label.setObjectName("SingleTab_Y1_label")

        self.SingleTab_CCD_group.raise_()
        self.SingleTab_AR_Group.raise_()
        self.SingleTab_Yc_output.raise_()
        self.SingleTab_Xc_output.raise_()
        self.SingleTab_Xc_label.raise_()
        self.SingleTab_Yc_label.raise_()
        self.SingleTab_Suit_label_2.raise_()
        self.Save_button = QtWidgets.QPushButton(self.Single_tab)
        self.Save_button.setGeometry(QtCore.QRect(628, 30, 51, 23))
        self.Save_button.setObjectName("Save_button") #save_log_sm
        self.Save_button.clicked.connect(self.save_log_sm)
        

        self.tabWidget.addTab(self.Single_tab, "")

    
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(165, 165, 165))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(165, 165, 165))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(165, 165, 165))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)

        
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(165, 165, 165))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(165, 165, 165))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(165, 165, 165))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)

        

        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(165, 165, 165))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(165, 165, 165))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(165, 165, 165))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)

        

        self.Bulk_tab = QtWidgets.QWidget()
        self.Bulk_tab.setObjectName("Bulk_tab")
        self.BulkTab_strPrd_date_label = QtWidgets.QLabel(self.Bulk_tab)
        self.BulkTab_strPrd_date_label.setGeometry(QtCore.QRect(30, 10, 151, 17))
        self.BulkTab_strPrd_date_label.setObjectName("BulkTab_strPrd_date_label")
        self.BulkTab_strDate_input = QtWidgets.QDateTimeEdit(self.Bulk_tab)
        self.BulkTab_strDate_input.setGeometry(QtCore.QRect(15, 30, 191, 31))
        self.BulkTab_strDate_input.setDisplayFormat('dd/MM/yyyy HH:mm:s')
        self.BulkTab_strDate_input.setDateTime(QtCore.QDateTime.currentDateTime())
        self.BulkTab_strDate_input.setObjectName("BulkTab_strDate_input")
        self.BulkTab_endPrd_date_label = QtWidgets.QLabel(self.Bulk_tab)
        self.BulkTab_endPrd_date_label.setGeometry(QtCore.QRect(240, 10, 151, 17))
        self.BulkTab_endPrd_date_label.setObjectName("BulkTab_endPrd_date_label")
        self.BulkTab_endDate_input = QtWidgets.QDateTimeEdit(self.Bulk_tab)
        self.BulkTab_endDate_input.setGeometry(QtCore.QRect(220, 30, 191, 31))
        self.BulkTab_endDate_input.setDisplayFormat('dd/MM/yyyy HH:mm:s')
        self.BulkTab_endDate_input.setDateTime(QtCore.QDateTime.currentDateTime())
        self.BulkTab_endDate_input.setObjectName("BulkTab_endDate_input")
        self.BulkTab_Predict_button = QtWidgets.QPushButton(self.Bulk_tab)
        self.BulkTab_Predict_button.setGeometry(QtCore.QRect(510, 30, 141, 31))
        self.BulkTab_Predict_button.setObjectName("BulkTab_Predict_button")
        self.BulkTab_Predict_button.clicked.connect(self.Calculate_coord_bulk)
        self.BulkTab_cadence_input = QtWidgets.QLineEdit(self.Bulk_tab)
        self.BulkTab_cadence_input.setGeometry(QtCore.QRect(430, 30, 60, 30))
        self.BulkTab_cadence_input.setObjectName("BulkTab_cadence_input")
        self.BulkTab_cadence_input.setAlignment(QtCore.Qt.AlignCenter)
        self.BulkTab_cadence_label = QtWidgets.QLabel(self.Bulk_tab)
        self.BulkTab_cadence_label.setGeometry(QtCore.QRect(415, 10, 95, 17))
        self.BulkTab_cadence_label.setObjectName("BulkTab_cadence_label")
        self.BulkTab_Prediction_group = QtWidgets.QGroupBox(self.Bulk_tab)
        self.BulkTab_Prediction_group.setGeometry(QtCore.QRect(7, 69, 711, 191))
        self.BulkTab_Prediction_group.setObjectName("BulkTab_Prediction_group")
        self.BulkTab_AR_Group = QtWidgets.QGroupBox(self.BulkTab_Prediction_group)
        self.BulkTab_AR_Group.setGeometry(QtCore.QRect(10, 30, 211, 151))
        self.BulkTab_AR_Group.setObjectName("BulkTab_AR_Group")
        self.BulkTab_ThetaX2_label = QtWidgets.QLabel(self.BulkTab_AR_Group)
        self.BulkTab_ThetaX2_label.setGeometry(QtCore.QRect(15, 30, 61, 17))
        self.BulkTab_ThetaX2_label.setObjectName("BulkTab_ThetaX2_label")
        self.BulkTab_ThetaY2_label = QtWidgets.QLabel(self.BulkTab_AR_Group)
        self.BulkTab_ThetaY2_label.setGeometry(QtCore.QRect(110, 30, 61, 17))
        self.BulkTab_ThetaY2_label.setObjectName("BulkTab_ThetaY2_label")
        self.BulkTab_Theta_output_x = QtWidgets.QTextBrowser(self.BulkTab_AR_Group)
        self.BulkTab_Theta_output_x.setGeometry(QtCore.QRect(10, 50, 71, 91))
        self.BulkTab_Theta_output_x.setObjectName("BulkTab_Theta_output_x")
        self.BulkTab_Theta_output_y = QtWidgets.QTextBrowser(self.BulkTab_AR_Group)
        self.BulkTab_Theta_output_y.setGeometry(QtCore.QRect(100, 50, 81, 91))
        self.BulkTab_Theta_output_y.setObjectName("BulkTab_Theta_output_y")
        self.BulkTab_Suit_label = QtWidgets.QLabel(self.BulkTab_Prediction_group)
        self.BulkTab_Suit_label.setGeometry(QtCore.QRect(400, 32, 141, 17))
        self.BulkTab_Suit_label.setObjectName("BulkTab_Suit_label")
        self.BulkTab_CCD_group = QtWidgets.QGroupBox(self.BulkTab_Prediction_group)
        self.BulkTab_CCD_group.setGeometry(QtCore.QRect(240, 47, 451, 131))
        self.BulkTab_CCD_group.setTitle("")
        self.BulkTab_CCD_group.setObjectName("BulkTab_CCD_group")
        self.BulkTab_Xc_label = QtWidgets.QLabel(self.BulkTab_CCD_group)
        self.BulkTab_Xc_label.setGeometry(QtCore.QRect(184, 10, 21, 17))
        self.BulkTab_Xc_label.setObjectName("BulkTab_Xc_label")
        self.BulkTab_Yc_label = QtWidgets.QLabel(self.BulkTab_CCD_group)
        self.BulkTab_Yc_label.setGeometry(QtCore.QRect(250, 10, 21, 17))
        self.BulkTab_Yc_label.setObjectName("BulkTab_Yc_label")
        self.BulkTab_Yc_output = QtWidgets.QTextBrowser(self.BulkTab_CCD_group)
        self.BulkTab_Yc_output.setGeometry(QtCore.QRect(230, 30, 61, 91))
        self.BulkTab_Yc_output.setObjectName("BulkTab_Yc_output")
        self.BulkTab_Xc_output = QtWidgets.QTextBrowser(self.BulkTab_CCD_group)
        self.BulkTab_Xc_output.setGeometry(QtCore.QRect(163, 30, 61, 91))
        
        self.BulkTab_Xc_output.setPalette(palette)
        self.BulkTab_Xc_output.setObjectName("BulkTab_Xc_output")
        self.BulkTab_Y1_output = QtWidgets.QTextBrowser(self.BulkTab_CCD_group)
        self.BulkTab_Y1_output.setGeometry(QtCore.QRect(78, 30, 61, 91))
        self.BulkTab_Y1_output.setObjectName("BulkTab_Y1_output")
        self.BulkTab_X1_output = QtWidgets.QTextBrowser(self.BulkTab_CCD_group)
        self.BulkTab_X1_output.setGeometry(QtCore.QRect(12, 30, 61, 91))


        self.BulkTab_X1_output.setPalette(palette)
        self.BulkTab_X1_output.setObjectName("BulkTab_X1_output")
        self.BulkTab_X2_output = QtWidgets.QTextBrowser(self.BulkTab_CCD_group)
        self.BulkTab_X2_output.setGeometry(QtCore.QRect(312, 30, 61, 91))

        self.BulkTab_X1_output.setPalette(palette)
        self.BulkTab_X1_output.setObjectName("BulkTab_X1_output")
        self.BulkTab_X2_output = QtWidgets.QTextBrowser(self.BulkTab_CCD_group)
        self.BulkTab_X2_output.setGeometry(QtCore.QRect(312, 30, 61, 91))
        self.BulkTab_X2_output.setPalette(palette)
        self.BulkTab_X2_output.setObjectName("BulkTab_X2_output")
        self.BulkTab_Y2_output = QtWidgets.QTextBrowser(self.BulkTab_CCD_group)
        self.BulkTab_Y2_output.setGeometry(QtCore.QRect(380, 30, 61, 91))
        self.BulkTab_Y2_output.setObjectName("BulkTab_Y2_output")
        self.BulkTab_X1_label = QtWidgets.QLabel(self.BulkTab_CCD_group)
        self.BulkTab_X1_label.setGeometry(QtCore.QRect(30, 10, 21, 17))
        self.BulkTab_X1_label.setObjectName("BulkTab_X1_label")
        self.BulkTab_Y1_label = QtWidgets.QLabel(self.BulkTab_CCD_group)
        self.BulkTab_Y1_label.setGeometry(QtCore.QRect(98, 10, 21, 17))
        self.BulkTab_Y1_label.setObjectName("BulkTab_Y1_label")
        self.BulkTab_X2_label = QtWidgets.QLabel(self.BulkTab_CCD_group)
        self.BulkTab_X2_label.setGeometry(QtCore.QRect(332, 10, 21, 17))
        self.BulkTab_X2_label.setObjectName("BulkTab_X2_label")
        self.BulkTab_Y2_label = QtWidgets.QLabel(self.BulkTab_CCD_group)
        self.BulkTab_Y2_label.setGeometry(QtCore.QRect(400, 10, 21, 17))
        self.BulkTab_Y2_label.setObjectName("BulkTab_Y2_label")
        self.Save_button_2 = QtWidgets.QPushButton(self.Bulk_tab)
        self.Save_button_2.setGeometry(QtCore.QRect(664, 31, 51, 30))
        self.Save_button_2.setObjectName("Save_button_2")
        self.Save_button_2.clicked.connect(self.save_log_bm)

      
        
        
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(165, 165, 165))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(165, 165, 165))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(165, 165, 165))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        
        
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(165, 165, 165))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(165, 165, 165))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(165, 165, 165))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
 


        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(165, 165, 165))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(165, 165, 165))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(251, 251, 251))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(165, 165, 165))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(123, 123, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(247, 247, 247))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)

        def Update_val(self):
            #print('------>',sky.Tx.arcsec)
            self.Calculate_coord()
            #self.MainWindow.setupUi()
            self.Theta1_input_x.setText(str(sky.Tx.arcsec))
            self.Theta1_input_y.setText(str(sky.Ty.arcsec))
      
       


        self.BulkTab_CCD_group.raise_()
        self.BulkTab_AR_Group.raise_()
        self.BulkTab_Suit_label.raise_()
        
        self.tabWidget.addTab(self.Bulk_tab, "")
        self.tabWidget.raise_()
        self.Current_Date_position_group.raise_()
        self.Current_Date_label.raise_()
        self.Current_pos_label.raise_()
        self.ThetaX_label.raise_()
        self.ThetaY_label.raise_()
        self.Theta1_input_x.raise_()
        self.Theta1_input_y.raise_()
        self.version_Label.raise_()
        self.Bottom_line.raise_()
        self.Suit_group.raise_()

    
        
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 849, 22))
        self.menubar.setObjectName("menubar")
        self.menuFiles = QtWidgets.QMenu(self.menubar)
        self.menuFiles.setObjectName("menuFiles")
        self.menuNew = QtWidgets.QMenu(self.menuFiles)
        self.menuNew.setObjectName("menuNew")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionContact = QtWidgets.QAction(MainWindow)
        self.actionContact.setObjectName("actionContact")
        self.actionLoad_Header = QtWidgets.QAction(MainWindow)
        self.actionLoad_Header.setObjectName("actionLoad_Header")
        self.actionLoad_Image = QtWidgets.QAction(MainWindow)
        self.actionLoad_Image.setObjectName("actionLoad_Image")
        self.actionLoad_Image_2 = QtWidgets.QAction(MainWindow)
        self.actionLoad_Image_2.setObjectName("actionLoad_Image_2")
        self.actionLoad_data = QtWidgets.QAction(MainWindow)
        self.actionLoad_data.setObjectName("actionLoad_data")
        self.actionSave_data = QtWidgets.QAction(MainWindow)
        self.actionSave_data.setObjectName("actionSave_data")
        self.actionHelio_viewer = QtWidgets.QAction(MainWindow)
        self.actionHelio_viewer.setObjectName("actionHelio_viewer")
        self.actionHelio_viewer.triggered.connect(self.open_Helio_viewer)
        self.actionSolar_Monitor = QtWidgets.QAction(MainWindow)
        self.actionSolar_Monitor.setObjectName("actionSolar_Monitor")
        self.actionSolar_Monitor.triggered.connect(self.open_solar_monitor)
        self.actionDocumentation = QtWidgets.QAction(MainWindow)
        self.actionDocumentation.setObjectName("actionDocumentation")
        self.actionDocumentation.triggered.connect(self.open_documentation)
        self.actionFeedback = QtWidgets.QAction(MainWindow)
        self.actionFeedback.setObjectName("actionFeedback")
        self.actionFeedback.triggered.connect(self.open_About)
        self.actionUpdates = QtWidgets.QAction(MainWindow)
        self.actionUpdates.setObjectName("actionUpdates")
        self.actionUpdates.triggered.connect(self.open_Updates)
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionAbout.triggered.connect(self.open_About)
        self.actionDark_Mode = QtWidgets.QAction(MainWindow)
        #self.actionDark_Mode.setObjectName("actionDark_Mode")
        #self.actionDark_Mode.triggered.connect(self.Dark_theme_2)
        self.actionLight_Mode = QtWidgets.QAction(MainWindow)
        #self.actionLight_Mode.setObjectName("actionLight_Mode")
        #self.actionLight_Mode.triggered.connect(self.Light_theme)
        self.menuNew.addSeparator()
        self.menuNew.addAction(self.actionLoad_Header)
        self.menuNew.addSeparator()
        self.menuNew.addAction(self.actionLoad_Image_2)
        self.menuFiles.addAction(self.menuNew.menuAction())
        self.menuFiles.addSeparator()
        self.menuFiles.addAction(self.actionLoad_data)
        self.menuFiles.addSeparator()
        self.menuFiles.addAction(self.actionSave_data)
        self.menuEdit.addAction(self.actionHelio_viewer)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionSolar_Monitor)
        self.menuView.addAction(self.actionDark_Mode)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionLight_Mode)

        self.menuHelp.addAction(self.actionDocumentation)
        #self.menuHelp.addSeparator()
        #self.menuHelp.addAction(self.actionContact)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionFeedback)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionUpdates)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionAbout)
        self.menubar.addAction(self.menuFiles.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
    

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "SUIT Feature Tracker"))
        self.Current_Date_label.setText(_translate("MainWindow", "Enter Date: DD/MM/YYYY-HH:MM"))
        self.Current_pos_label.setText(_translate("MainWindow", "Position of Feature (in arcsec)"))
        self.ThetaX_label.setText(_translate("MainWindow", "Theta X :"))
        self.ThetaY_label.setText(_translate("MainWindow", "Theta Y :"))
        self.version_Label.setText(_translate("MainWindow", "Version :1.0.1"))
        self.Current_Date_position_group.setTitle(_translate("MainWindow", "Current date and Position"))
        self.pushButton.setText(_translate("MainWindow", "Display Image"))
        self.Suit_group.setTitle(_translate("MainWindow", "SUIT Information"))
        self.Sat_Rot_Label.setText(_translate("MainWindow", "Satellite rotation angle"))
        self.Suit_label_1.setText(_translate("MainWindow", "Sun centre on CCD"))
        self.X1_label.setText(_translate("MainWindow", "X :"))
        self.Y1_label.setText(_translate("MainWindow", "Y :"))
        self.ROI_label.setText(_translate("MainWindow", "ROI size"))
        self.Row_label.setText(_translate("MainWindow", "Row :"))
        self.Row_label_2.setText(_translate("MainWindow", "Col :"))
        self.Suit_label_2.setText(_translate("MainWindow", "Data level"))
        self.comboBox.setItemText(0, _translate("MainWindow", "Level-0.5"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Level-1.0"))
        self.SingleTab_Prd_date_label.setText(_translate("MainWindow", "Prediction Date: DD/MM/YYYY-HH:MM"))
        self.SingleTab_Predict_button.setText(_translate("MainWindow", "Predtict position"))
        self.SingleTab_Prediction_group.setTitle(_translate("MainWindow", "Prediction"))
        self.SingleTab_AR_Group.setTitle(_translate("MainWindow", "ROI Centre (in arcsec)"))
        self.SingleTab_ThetaX2_label.setText(_translate("MainWindow", "Theta X :"))
        self.SingleTab_ThetaY2_label.setText(_translate("MainWindow", "Theta Y :"))
        self.SingleTab_Xc_label.setText(_translate("MainWindow", "Xc :"))
        self.SingleTab_Yc_label.setText(_translate("MainWindow", "Yc :"))
        self.SingleTab_Suit_label_2.setText(_translate("MainWindow", "ROI Centre on SUIT CCD "))
        self.SingleTab_X2_label.setText(_translate("MainWindow", "X2 :"))
        self.SingleTab_X1_label.setText(_translate("MainWindow", "X1 :"))
        self.SingleTab_Y2_label.setText(_translate("MainWindow", "Y2 :"))
        self.SingleTab_Y1_label.setText(_translate("MainWindow", "Y1 :"))
        self.Save_button.setText(_translate("MainWindow", "Save "))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Single_tab), _translate("MainWindow", "Single Mode"))
        self.BulkTab_strPrd_date_label.setText(_translate("MainWindow", "Prediction Start Date"))
        self.BulkTab_endPrd_date_label.setText(_translate("MainWindow", "Prediction End Date"))
        self.BulkTab_Predict_button.setText(_translate("MainWindow", "Predtict position"))
        self.BulkTab_cadence_label.setText(_translate("MainWindow", "Cadence (in h)"))
        self.BulkTab_Prediction_group.setTitle(_translate("MainWindow", "Prediction"))
        self.BulkTab_AR_Group.setTitle(_translate("MainWindow", " Position of AR (in arcsec)"))
        self.BulkTab_ThetaX2_label.setText(_translate("MainWindow", "Theta X :"))
        self.BulkTab_ThetaY2_label.setText(_translate("MainWindow", "Theta Y :"))
        self.BulkTab_Suit_label.setText(_translate("MainWindow", "Sun centre on CCD"))
        self.BulkTab_Xc_label.setText(_translate("MainWindow", "Xc"))
        self.BulkTab_Yc_label.setText(_translate("MainWindow", "Yc"))
        self.BulkTab_X1_label.setText(_translate("MainWindow", "X1"))
        self.BulkTab_Y1_label.setText(_translate("MainWindow", "Y1"))
        self.BulkTab_X2_label.setText(_translate("MainWindow", "X2"))
        self.BulkTab_Y2_label.setText(_translate("MainWindow", "Y2"))
        self.Save_button_2.setText(_translate("MainWindow", "Save "))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Bulk_tab), _translate("MainWindow", "Batch Mode"))
        self.menuFiles.setTitle(_translate("MainWindow", "Files"))
        self.menuNew.setTitle(_translate("MainWindow", "New"))
        self.menuEdit.setTitle(_translate("MainWindow", "Tools"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionDocumentation.setText(_translate("MainWindow", "Documentation"))
        self.actionLoad_Header.setText(_translate("MainWindow", "Load Header"))
        self.actionLoad_Image.setText(_translate("MainWindow", "Load Image"))
        self.actionLoad_Image_2.setText(_translate("MainWindow", "Load Image"))
        self.actionLoad_data.setText(_translate("MainWindow", "Load data"))
        self.actionSave_data.setText(_translate("MainWindow", "Save data"))
        self.actionHelio_viewer.setText(_translate("MainWindow", "Helio viewer"))
        self.actionSolar_Monitor.setText(_translate("MainWindow", "Solar Monitor"))
        self.actionFeedback.setText(_translate("MainWindow", "Feedback"))
        self.actionUpdates.setText(_translate("MainWindow", "Updates"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionDark_Mode.setText(_translate("MainWindow", "Dark Mode"))
        self.actionLight_Mode.setText(_translate("MainWindow", "Light Mode"))

#------------------------------------------------------------------------------------------------------------

    


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    app.setWindowIcon(QIcon(f'{os.path.dirname(os.path.abspath(__file__))}/App_logo.svg'))
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

        
